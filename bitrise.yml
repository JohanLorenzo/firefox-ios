---
format_version: '6'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
workflows:
  primary:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.0: {}
    - carthage@3.1.7:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - configuration: Release
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            brew install https://raw.githubusercontent.com/TitouanVanBelle/XCTestHTMLReport/develop/xchtmlreport.rb
        title: Install XCTestHTMLReport
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_XCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            xchtmlreport -r ./ddata/Test.xcresult
            cp ./ddata/Test.xcresult/index.html $BITRISE_DEPLOY_DIR/
        opts:
          is_expand: true
        title: Generate HTML report and export it
        is_always_run: true
    - deploy-to-bitrise-io@1.9.2: {}
    - cache-push@2.2.0: {}
    - slack@3.1.2:
        inputs:
        - webhook_url: "$WEBHOOK_SLACK_TOKEN"
    description: This workflow runs the smoketest per PR. Currently disabled until
      build only starts for contributors
  PushInMasterTests:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo "Postclone"
            cd /Users/vagrant/git/content-blocker-lib-ios/
            ./build-disconnect.py block
            ./build-disconnect.py block-cookies
            cd ..
        title: Post Clone needed after skyline changes
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - configuration: Release
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            brew install https://raw.githubusercontent.com/TitouanVanBelle/XCTestHTMLReport/develop/xchtmlreport.rb
        title: Install XCTestHTMLReport
    - xcode-test@2.0.0:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SmokeXCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - xcodebuild_test_options: "-resultBundlePath ./ddata/Test.xcresult"
        - simulator_device: iPhone X
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SmokeXCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            xchtmlreport -r ./ddata/Test.xcresult
            cp ./ddata/Test.xcresult/index.html $BITRISE_DEPLOY_DIR/
        opts:
          is_expand: true
        title: Generate HTML report and export it
        is_always_run: true
    - deploy-to-bitrise-io@1.3.19: {}
    - cache-push@2.2.0: {}
    - slack@3.1.2:
        inputs:
        - webhook_url: "$WEBHOOK_SLACK_TOKEN"
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_SmokeXCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
  TestingWorkflowAllTestsScenarios:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.1.7:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - configuration: Release
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            brew install https://raw.githubusercontent.com/TitouanVanBelle/XCTestHTMLReport/develop/xchtmlreport.rb
        title: Install XCTestHTMLReport
    - xcode-test@2.0.0:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SmokeXCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - xcodebuild_test_options: "-resultBundlePath ./ddata/Test.xcresult"
        - simulator_device: iPad Air 2
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_XCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            xchtmlreport -r ./ddata/Test.xcresult
            cp ./ddata/Test.xcresult/index.html $BITRISE_DEPLOY_DIR/
        opts:
          is_expand: true
        title: Generate HTML report and export it
        is_always_run: true
    - virtual-device-testing-for-ios@0.9.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_Smoke"}}'
        inputs:
        - test_devices: iphone6s,12.0,en,portrait
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SMXCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            mkdir /Users/vagrant/.config
            mkdir /Users/vagrant/.config/gcloud
            echo "$SERVICE_ACCOUNT_KEY_JSON" > $HOME/.config/gcloud/application_default_credentials.json
        title: Save Google Service Account JSON
        is_always_run: true
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SMXCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            cat << FLANKEOF > ./flank.ios.yml
            # gcloud args match the official gcloud cli
            # https://cloud.google.com/sdk/gcloud/reference/alpha/firebase/test/ios/run
            gcloud:
              # results-bucket: tmp_flank
              record-video: true
              timeout: 30m
              async: false
              # project: firefox-iOS
              # results-history-name: firefox-iOS-history
              # test and xctestrun-file are the only required args
              # zipped test bundle is available in BITRISE_TEST_BUNDLE_ZIP_PATH
              # test: /Users/vagrant/deploy/testbundle.zip
              test: $BITRISE_TEST_BUNDLE_ZIP_PATH
              # built xctestrun file is available in BITRISE_XCTESTRUN_FILE_PATH
              #xctestrun-file: /Users/vagrant/deploy/Fennec_Enterprise_XCUITests_iphoneos12.1-arm64e.xctestrun
              xctestrun-file: $BITRISE_XCTESTRUN_FILE_PATH
              xcode-version: 10.2
              device:
                - model: iphone6s
                  version: 12.0
                  locale: en
                  orientation: portrait
            flank:
              # test shards - the amount of groups to split the test suite into
              # set to -1 to use one shard per test.
              testShards: 3
              # repeat tests - the amount of times to run the tests.
              # 1 runs the tests once. 10 runs all the tests 10x
              repeatTests: 1
              # always run - these tests are inserted at the beginning of every shard
              # useful if you need to grant permissions or login before other tests run
              #test-targets:
                # - HistoryTests/testClearHistoryFromSettings
                # - ActivityStreamTest/testDefaultSites
        title: Generate Flank config
        is_always_run: true
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SMXCUITests"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            mkdir /Users/vagrant/deploy/Fennec-iphoneos
            mkdir /Users/vagrant/deploy/Fennec-iphoneos/XCUITests-Runner.app
            mkdir /Users/vagrant/deploy/Fennec-iphoneos/XCUITests-Runner.app/PlugIns
            mkdir /Users/vagrant/deploy/Fennec-iphoneos/XCUITests-Runner.app/PlugIns/XCUITests.xctest/
            cp /Users/vagrant/deploy/Products/Fennec-iphoneos/XCUITests-Runner.app/PlugIns/XCUITests.xctest/XCUITests /Users/vagrant/deploy/Fennec-iphoneos/XCUITests-Runner.app/PlugIns/XCUITests.xctest/
            # The iphoneos folder name changes and so it has to be updated depending on the scheme run
            cp /Users/vagrant/deploy/Fennec_Enterprise_XCUITests_iphoneos12.1-arm64e.xctestrun /Users/vagrant/deploy/Fennec-iphoneos/XCUITests-Runner.app/PlugIns/XCUITests.xctest/
            set -x
            wget --quiet https://github.com/TestArmada/flank/releases/download/flank_snapshot/flank.jar -O /usr/local/bin/flank.jar
            java -jar /usr/local/bin/flank.jar firebase test ios run
        title: Run Flank
        is_always_run: true
    - script@1.1.5:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SMXCUITests"}}'
        title: Copy Results
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            echo "Copying flank results to deploy dir"
            cp -r /Users/vagrant/*/results/*/* $BITRISE_DEPLOY_DIR
        is_always_run: true
    - deploy-to-bitrise-io@1.3.19: {}
    description: |-
      This workflow have all the steps needed for the different tests scenarios:
      -Run tests on simulator
      -Run tests on real device (Bitrise)
      -Run tests on real device (Firebase)
      -Run tests on parallel (Flank and Firebase)

      With the necessary steps to generate the reports with the test results
  Smoketest_iPad:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios
            ./build-disconnect.py block
            ./build-disconnect.py block-cookies
            cd ..
        title: Post Clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - scheme: Fennec_Enterprise_XCUITests
        - configuration: Release
    - xcode-test@2.4.0:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_XCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.2'
        - export_uitest_artifacts: 'true'
        - simulator_device: iPhone 8
    - deploy-to-bitrise-io@1.9.4: {}
    - cache-push@2.2.0: {}
    - slack@3.1.2:
        inputs:
        - webhook_url: "$WEBHOOK_SLACK_TOKEN"
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_XCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    meta:
      bitrise.io:
        stack: osx-xcode-11.2.x
  bitrise_support:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios
            ./build-disconnect.py block
            ./build-disconnect.py block-cookies
            cd ..
        title: Post Clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - xcode-build-for-test@0.4.0:
        inputs:
        - scheme: Fennec_Enterprise_XCUITests
        - configuration: Release
    - xcode-test@2.4.2:
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.0'
        - simulator_device: iPhone 8
    - deploy-to-bitrise-io@1.9.3: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_XCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    before_run: []
    after_run: []
  bitrise_support_2:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios
            ./build-disconnect.py block
            ./build-disconnect.py block-cookies
            cd ..
        title: Post Clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - script@1.1.5:
        title: GYP+ninja+Rust install
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            git clone https://chromium.googlesource.com/external/gyp.git tools/gyp
            cd tools/gyp
            python setup.py install
            cd "$BITRISE_DOURCE_DIR"
            which gyp

            brew install ninja
            which ninja

            curl https://sh.rustup.rs -sSf > /tmp/rustup.sh
            chmod +x /tmp/rustup.sh
            /tmp/rustup.sh -y
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - scheme: Fennec_Enterprise_SmokeXCUITests
        - configuration: Release
    - xcode-test@2.4.1:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SmokeXCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.2'
        - export_uitest_artifacts: 'true'
        - verbose: 'yes'
        - xcodebuild_test_options: "-UseModernBuildSystem=NO"
        - simulator_device: iPhone 8
    - deploy-to-bitrise-io@1.9.2: {}
    - cache-push@2.2.0: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_SmokeXCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    meta:
      bitrise.io:
        stack: osx-xcode-11.0.x
  bitrise_support_3:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios
            ./build-disconnect.py block
            ./build-disconnect.py block-cookies
            cd ..
        title: Post Clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            echo "Hello World!"

            sleep 1800

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - scheme: Fennec_Enterprise_XCUITests
    - xcode-test@2.4.1:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_XCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.3'
        - export_uitest_artifacts: 'true'
        - simulator_device: iPhone 8
    - deploy-to-bitrise-io@1.9.2: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_XCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    meta:
      bitrise.io:
        stack: osx-xcode-11.2.x
  PushInMasterSmokeTest:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios/ContentBlockerGen && swift run
        title: Post clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - configuration: Release
        - scheme: Fennec_Enterprise_SmokeXCUITests
    - xcode-test@2.4.1:
        run_if: '{{enveq "BITRISE_SCHEME" "Fennec_Enterprise_SmokeXCUITests"}}'
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.3'
        - export_uitest_artifacts: 'true'
        - simulator_device: iPhone 8
    - deploy-to-bitrise-io@1.9.4: {}
    - cache-push@2.2.0: {}
    - slack@3.1.2:
        inputs:
        - webhook_url: "$WEBHOOK_SLACK_TOKEN"
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_SmokeXCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    meta:
      bitrise.io:
        stack: osx-xcode-11.3.x
  MasterScheduledBuildAllTests:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios/ContentBlockerGen && swift run
        title: Post Clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - git::https://github.com/bitrise-steplib/steps-xcode-build-for-test.git@export-fix:
        inputs:
        - scheme: Fennec_Enterprise_XCUITests
        - configuration: Release
    - xcode-test@2.4.0:
        inputs:
        - output_tool: xcodebuild
        - simulator_os_version: '13.3'
        - simulator_device: iPad Air (3rd generation)
    - deploy-to-bitrise-io@1.9.4: {}
    - cache-push@2.2.0: {}
    - slack@3.1.2:
        inputs:
        - webhook_url: "$WEBHOOK_SLACK_TOKEN"
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Fennec_Enterprise_XCUITests
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    before_run: []
  L10nScreenshotsTests:
    steps:
    - activate-ssh-key@4.0.3:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.14: {}
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            echo "PostClone step"
            carthage checkout

            cd content-blocker-lib-ios/ContentBlockerGen && swift run
        title: Post clone step for TP updates
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: NPM install and build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            npm install
            npm run build
    - certificate-and-profile-installer@1.10.1: {}
    - carthage@3.2.0:
        inputs:
        - carthage_options: "--platform ios"
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            pip3 install virtualenv
            virtualenv .
            source ./bin/activate

            # write your script here
            ls
            cd /Users/vagrant/git/
            ls
            git clone https://github.com/mozilla-mobile/ios-l10n-scripts.git

            # Import locales
            ./ios-l10n-scripts/import-locales-firefox.sh
        title: Import locales
    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # Generate screenshots for just en-US and nl

            ./l10n-screenshots.sh nl

            # Copy to screenshots to deploy
            ls
        title: Generate screenshots
    - deploy-to-bitrise-io@1.9.4:
        inputs:
        - deploy_path: l10n-screenshots/nl/nl
        - is_compress: 'true'
    - cache-push@2.2.0: {}
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: L10nSnapshotTest
    description: This Workflow is to run tests (currently SmokeTest) when there is
      a merge in master
    meta:
      bitrise.io:
        stack: osx-xcode-11.3.x
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: Client.xcodeproj
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
meta:
  bitrise.io:
    machine_type: performance
trigger_map:
- push_branch: master
  workflow: PushInMasterSmokeTest
